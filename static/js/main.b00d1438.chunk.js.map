{"version":3,"sources":["uikit/Input.js","uikit/UnorderedList.js","uikit/ListItem.js","components/AutoCompleteText.js","actions/index.js","components/App.js","data/countries.js","reducers/index.js","reducers/countriesReducer.js","reducers/selectedCountryReducer.js","reducers/selectedSuggestionsReducer.js","index.js"],"names":["Input","styled","input","List","ul","ListItem","li","Container","div","UnorderedList","Item","connect","state","countries","selectedCountry","selectedSuggestions","selectCountry","country","type","payload","selectSuggestions","value","onChange","e","target","length","regex","RegExp","sort","filter","test","map","suggestion","onClick","key","Date","Math","random","AppContainer","Wrapper","App","split","combineReducers","action","store","createStore","reducers","ReactDOM","render","document","querySelector"],"mappings":"2ZAEA,IAQeA,EARDC,IAAOC,MAAV,K,mJCAX,IAOeC,EAPFF,IAAOG,GAAV,K,6FCAV,IAIeC,EAJEJ,IAAOK,GAAV,K,onBCOd,IAAMC,EAAYN,IAAOO,IAAV,KAUTC,EAAgBR,YAAOE,EAAPF,CAAH,KAQbS,EAAOT,YAAOI,EAAPJ,CAAH,KAkEKU,eANS,SAACC,GAAD,MAAY,CAClCC,UAAWD,EAAMC,UACjBC,gBAAiBF,EAAME,gBACvBC,oBAAqBH,EAAMG,uBAGW,CAAEC,cC7Fb,SAACC,GAC5B,MAAO,CACLC,KAAM,mBACNC,QAASF,ID0F4CG,kBCtFxB,SAACP,GAChC,MAAO,CACLK,KAAM,uBACNC,QAASN,KDmFEF,EAzDU,SAAC,GAMnB,IALLE,EAKI,EALJA,UACAC,EAII,EAJJA,gBACAC,EAGI,EAHJA,oBACAC,EAEI,EAFJA,cACAI,EACI,EADJA,kBAsCA,OACE,kBAACb,EAAD,KACE,kBAAC,EAAD,CAAOc,MAAOP,EAAiBI,KAAK,OAAOI,SAtCzB,SAACC,GACrB,IAAMF,EAAQE,EAAEC,OAAOH,MAMvB,GAJAL,EAAcK,GAEdD,EAAkB,IAEdC,EAAMI,OAAS,EAAG,CACpB,IAAMC,EAAQ,IAAIC,OAAJ,WAAeN,GAAS,KAEtCD,EACEP,EAAUe,OAAOC,QAAO,SAACZ,GAAD,OAAaS,EAAMI,KAAKb,WAYrB,IAA/BF,EAAoBU,OAAe,KACjC,kBAAC,EAAD,KACGV,EAAoBgB,KAAI,SAACC,GAAD,OACvB,kBAACtB,EAAD,CACEuB,QAAS,kBAVjBjB,EAU0CgB,QAR1CZ,EAAkB,KASVc,IAAK,IAAIC,KAASC,KAAKC,UAEtBL,W,wNEpEb,IAAMM,EAAerC,IAAOO,IAAV,KAIZ+B,EAAUtC,IAAOO,IAAV,KAeEgC,EAVH,kBACV,kBAACF,EAAD,KACE,kBAACC,EAAD,KACE,kBAACA,EAAD,KACE,kBAAC,EAAD,UClBO,0/DAmMLE,MAAM,MC7LDC,cAAgB,CAC7B7B,UCLa,kBAAMA,GDMnBC,gBERa,WAAyB,IAAxBF,EAAuB,uDAAf,GAAI+B,EAAW,uCACrC,MAAoB,qBAAhBA,EAAOzB,KACFyB,EAAOxB,QAGTP,GFIPG,oBGTa,WAAyB,IAAxBH,EAAuB,uDAAf,GAAI+B,EAAW,uCACrC,MAAoB,yBAAhBA,EAAOzB,KACFyB,EAAOxB,QAGTP,KCGHgC,EAAQC,YAAYC,GAE1BC,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,EAAD,OAEFK,SAASC,cAAc,Y","file":"static/js/main.b00d1438.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Input = styled.input`\n  width: 100%;\n  border: none;\n  box-sizing: border-box;\n  padding: 10px 5px;\n  outline: none;\n`;\n\nexport default Input;\n","import styled from \"styled-components\";\n\nconst List = styled.ul`\n  list-style-type: none;\n  text-align: left;\n  margin: 0;\n  padding: 0;\n`;\n\nexport default List;\n","import styled from \"styled-components\";\n\nconst ListItem = styled.li`\n  padding: 10px 5px;\n`;\n\nexport default ListItem;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { selectCountry, selectSuggestions } from \"../actions\";\n\nimport Input from \"../uikit/Input\";\nimport List from \"../uikit/UnorderedList\";\nimport ListItem from \"../uikit/ListItem\";\n\nconst Container = styled.div`\n  width: 100%;\n  border: 1px solid grey;\n  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1), 0 2px 4px 1px rgba(0, 0, 0, 0.18);\n\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.73);\n`;\n\nconst UnorderedList = styled(List)`\n  border-top: 1px solid grey;\n\n  &::before {\n    content: \"\";\n  }\n`;\n\nconst Item = styled(ListItem)`\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: underline;\n    background-color: rgba(128, 128, 128, 0.2);\n  }\n`;\n\nconst AutoCompleteText = ({\n  countries,\n  selectedCountry,\n  selectedSuggestions,\n  selectCountry,\n  selectSuggestions,\n}) => {\n  const onInputChange = (e) => {\n    const value = e.target.value;\n\n    selectCountry(value);\n\n    selectSuggestions([]);\n\n    if (value.length > 0) {\n      const regex = new RegExp(`^${value}`, \"i\");\n\n      selectSuggestions(\n        countries.sort().filter((country) => regex.test(country))\n      );\n    }\n  };\n\n  const suggestionSelected = (value) => {\n    selectCountry(value);\n\n    selectSuggestions([]);\n  };\n\n  const renderSuggestions = () =>\n    selectedSuggestions.length === 0 ? null : (\n      <UnorderedList>\n        {selectedSuggestions.map((suggestion) => (\n          <Item\n            onClick={() => suggestionSelected(suggestion)}\n            key={new Date() * Math.random()}\n          >\n            {suggestion}\n          </Item>\n        ))}\n      </UnorderedList>\n    );\n\n  return (\n    <Container>\n      <Input value={selectedCountry} type=\"text\" onChange={onInputChange} />\n      {renderSuggestions()}\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  countries: state.countries,\n  selectedCountry: state.selectedCountry,\n  selectedSuggestions: state.selectedSuggestions,\n});\n\nexport default connect(mapStateToProps, { selectCountry, selectSuggestions })(\n  AutoCompleteText\n);\n","export const selectCountry = (country) => {\n  return {\n    type: \"COUNTRY_SELECTED\",\n    payload: country,\n  };\n};\n\nexport const selectSuggestions = (countries) => {\n  return {\n    type: \"SUGGESTIONS_SELECTED\",\n    payload: countries,\n  };\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport AutoCompleteText from \"./AutoCompleteText\";\n\nconst AppContainer = styled.div`\n  text-align: center;\n`;\n\nconst Wrapper = styled.div`\n  margin: 150px auto 0 auto;\n  max-width: 600px;\n`;\n\nconst App = () => (\n  <AppContainer>\n    <Wrapper>\n      <Wrapper>\n        <AutoCompleteText />\n      </Wrapper>\n    </Wrapper>\n  </AppContainer>\n);\n\nexport default App;\n","export default `Afghanistan\nAlbania\nAlgeria\nAndorra\nAngola\nAntigua & Deps\nArgentina\nArmenia\nAustralia\nAustria\nAzerbaijan\nBahamas\nBahrain\nBangladesh\nBarbados\nBelarus\nBelgium\nBelize\nBenin\nBhutan\nBolivia\nBosnia Herzegovina\nBotswana\nBrazil\nBrunei\nBulgaria\nBurkina\nBurundi\nCambodia\nCameroon\nCanada\nCape Verde\nCentral African Rep\nChad\nChile\nChina\nColombia\nComoros\nCongo\nCongo {Democratic Rep}\nCosta Rica\nCroatia\nCuba\nCyprus\nCzech Republic\nDenmark\nDjibouti\nDominica\nDominican Republic\nEast Timor\nEcuador\nEgypt\nEl Salvador\nEquatorial Guinea\nEritrea\nEstonia\nEthiopia\nFiji\nFinland\nFrance\nGabon\nGambia\nGeorgia\nGermany\nGhana\nGreece\nGrenada\nGuatemala\nGuinea\nGuinea-Bissau\nGuyana\nHaiti\nHonduras\nHungary\nIceland\nIndia\nIndonesia\nIran\nIraq\nIreland {Republic}\nIsrael\nItaly\nIvory Coast\nJamaica\nJapan\nJordan\nKazakhstan\nKenya\nKiribati\nKorea North\nKorea South\nKosovo\nKuwait\nKyrgyzstan\nLaos\nLatvia\nLebanon\nLesotho\nLiberia\nLibya\nLiechtenstein\nLithuania\nLuxembourg\nMacedonia\nMadagascar\nMalawi\nMalaysia\nMaldives\nMali\nMalta\nMarshall Islands\nMauritania\nMauritius\nMexico\nMicronesia\nMoldova\nMonaco\nMongolia\nMontenegro\nMorocco\nMozambique\nMyanmar, {Burma}\nNamibia\nNauru\nNepal\nNetherlands\nNew Zealand\nNicaragua\nNiger\nNigeria\nNorway\nOman\nPakistan\nPalau\nPanama\nPapua New Guinea\nParaguay\nPeru\nPhilippines\nPoland\nPortugal\nQatar\nRomania\nRussian Federation\nRwanda\nSt Kitts & Nevis\nSt Lucia\nSaint Vincent & the Grenadines\nSamoa\nSan Marino\nSao Tome & Principe\nSaudi Arabia\nSenegal\nSerbia\nSeychelles\nSierra Leone\nSingapore\nSlovakia\nSlovenia\nSolomon Islands\nSomalia\nSouth Africa\nSouth Sudan\nSpain\nSri Lanka\nSudan\nSuriname\nSwaziland\nSweden\nSwitzerland\nSyria\nTaiwan\nTajikistan\nTanzania\nThailand\nTogo\nTonga\nTrinidad & Tobago\nTunisia\nTurkey\nTurkmenistan\nTuvalu\nUganda\nUkraine\nUnited Arab Emirates\nUnited Kingdom\nUnited States\nUruguay\nUzbekistan\nVanuatu\nVatican City\nVenezuela\nVietnam\nYemen\nZambia\nZimbabwe`.split(\"\\n\");\n","import { combineReducers } from \"redux\";\n\nimport countriesReducer from \"./countriesReducer\";\nimport selectedCountryReducer from \"./selectedCountryReducer\";\nimport selectedSuggestionsReducer from \"./selectedSuggestionsReducer\";\n\nexport default combineReducers({\n  countries: countriesReducer,\n  selectedCountry: selectedCountryReducer,\n  selectedSuggestions: selectedSuggestionsReducer,\n});\n","import countries from \"../data/countries\";\n\nexport default () => countries;\n","export default (state = \"\", action) => {\n  if (action.type === \"COUNTRY_SELECTED\") {\n    return action.payload;\n  }\n\n  return state;\n};\n","export default (state = [], action) => {\n  if (action.type === \"SUGGESTIONS_SELECTED\") {\n    return action.payload;\n  }\n\n  return state;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\n\nconst store = createStore(reducers);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}